//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name = "Assignment4ServiceSoap", Namespace = "http://tempuri.org/")]
public partial class Assignment4Service : System.Web.Services.Protocols.SoapHttpClientProtocol
{

    private System.Threading.SendOrPostCallback InsertUsersOperationCompleted;

    private System.Threading.SendOrPostCallback GetAccountsOperationCompleted;

    /// <remarks/>
    public Assignment4Service()
    {
        this.Url = "http://localhost/WSAssignment4/Assignment4Service.asmx";
    }

    /// <remarks/>
    public event InsertUsersCompletedEventHandler InsertUsersCompleted;

    /// <remarks/>
    public event GetAccountsCompletedEventHandler GetAccountsCompleted;

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUsers", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void InsertUsers(string username, string name, string surename)
    {
        this.Invoke("InsertUsers", new object[] {
                    username,
                    name,
                    surename});
    }

    /// <remarks/>
    public System.IAsyncResult BeginInsertUsers(string username, string name, string surename, System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("InsertUsers", new object[] {
                    username,
                    name,
                    surename}, callback, asyncState);
    }

    /// <remarks/>
    public void EndInsertUsers(System.IAsyncResult asyncResult)
    {
        this.EndInvoke(asyncResult);
    }

    /// <remarks/>
    public void InsertUsersAsync(string username, string name, string surename)
    {
        this.InsertUsersAsync(username, name, surename, null);
    }

    /// <remarks/>
    public void InsertUsersAsync(string username, string name, string surename, object userState)
    {
        if ((this.InsertUsersOperationCompleted == null))
        {
            this.InsertUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUsersOperationCompleted);
        }
        this.InvokeAsync("InsertUsers", new object[] {
                    username,
                    name,
                    surename}, this.InsertUsersOperationCompleted, userState);
    }

    private void OnInsertUsersOperationCompleted(object arg)
    {
        if ((this.InsertUsersCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.InsertUsersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccounts", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public Account[] GetAccounts()
    {
        object[] results = this.Invoke("GetAccounts", new object[0]);
        return ((Account[])(results[0]));
    }

    /// <remarks/>
    public System.IAsyncResult BeginGetAccounts(System.AsyncCallback callback, object asyncState)
    {
        return this.BeginInvoke("GetAccounts", new object[0], callback, asyncState);
    }

    /// <remarks/>
    public Account[] EndGetAccounts(System.IAsyncResult asyncResult)
    {
        object[] results = this.EndInvoke(asyncResult);
        return ((Account[])(results[0]));
    }

    /// <remarks/>
    public void GetAccountsAsync()
    {
        this.GetAccountsAsync(null);
    }

    /// <remarks/>
    public void GetAccountsAsync(object userState)
    {
        if ((this.GetAccountsOperationCompleted == null))
        {
            this.GetAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountsOperationCompleted);
        }
        this.InvokeAsync("GetAccounts", new object[0], this.GetAccountsOperationCompleted, userState);
    }

    private void OnGetAccountsOperationCompleted(object arg)
    {
        if ((this.GetAccountsCompleted != null))
        {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }

    /// <remarks/>
    public new void CancelAsync(object userState)
    {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
public partial class Account
{

    private string usernameField;

    private string nameField;

    private string surenameField;

    /// <remarks/>
    public string Username
    {
        get
        {
            return this.usernameField;
        }
        set
        {
            this.usernameField = value;
        }
    }

    /// <remarks/>
    public string Name
    {
        get
        {
            return this.nameField;
        }
        set
        {
            this.nameField = value;
        }
    }

    /// <remarks/>
    public string Surename
    {
        get
        {
            return this.surenameField;
        }
        set
        {
            this.surenameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void InsertUsersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetAccountsCompletedEventHandler(object sender, GetAccountsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{

    private object[] results;

    internal GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
    {
        this.results = results;
    }

    /// <remarks/>
    public Account[] Result
    {
        get
        {
            this.RaiseExceptionIfNecessary();
            return ((Account[])(this.results[0]));
        }
    }
}
